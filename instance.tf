resource "random_string" "password" {
    length = 32
    special = true
    override_special = "$@/"
}

resource "google_service_account" "vm_sa" {
  account_id   = "webserver-sa"
  display_name = "Custom SA for VM Instance"
}

# This code is compatible with Terraform 4.25.0 and versions that are backwards compatible to 4.25.0.
# For information about validating this Terraform code, see https://developer.hashicorp.com/terraform/tutorials/gcp-get-started/google-cloud-platform-build#format-and-validate-the-configuration

resource "google_compute_instance" "sample-i" {
  boot_disk {
    auto_delete = true
    device_name = "sample-i"

    initialize_params {
      image = "projects/debian-cloud/global/images/debian-11-bullseye-v20240415"
      size  = 128
      type  = "pd-balanced"
    }

    mode = "READ_WRITE"
  }

  can_ip_forward      = false
  deletion_protection = false
  enable_display      = false

  labels = {
    goog-ec-src = "vm_add-tf"
  }

  machine_type = "e2-standard-8"

#   metadata = {
#     #startup-script = "#!/bin/bash\napt install -y nginx\ncat <<EOF > /var/www/html/index.html\n<html><body>\n<h1>Hello, Class 5.5</h1>\n<br/>\nHostname: $(curl \"http://metadata.google.internal/computeMetadata/v1/instance/hostname\" -H \"Metadata-Flavor: Google\")\n<br/>\nInstance ID: $(curl \"http://metadata.google.internal/computeMetadata/v1/instance/id\" -H \"Metadata-Flavor: Google\")\n<br/>\nProject ID: $(curl \"http://metadata.google.internal/computeMetadata/v1/project/project-id\" -H \"Metadata-Flavor: Google\")\n<br/>\nZone ID: $(curl \"http://metadata.google.internal/computeMetadata/v1/instance/zone\" -H \"Metadata-Flavor: Google\")\n</body></html>\nEOF\n"
#     startup-script = file("./userdata/tpot-userdata.sh")
#   }
    #metadata_startup_script = file("${path.module}/userdata/tpot-userdata.sh")
    metadata_startup_script = <<EOF
#!/bin/bash
#SET the web password from inside terraform
#user webuser
WEBPASS='${random_string.password.result}' # TODO: need to pull this value from secrets. Change this to what oyu want
WORKDIR="/tmp"
sudo apt-get update

# Ignore any intereactive dialog when doing upgrade
DEBIAN_FRONTEND=noninteractive sudo apt-get upgrade -yq 

#install git
apt install git -y 

# work from the home directory and clone tpot
cd $WORKDIR
git clone https://github.com/telekom-security/tpotce.git --branch 22.04 && \

# make a copy of the default tpot.conf file. 
cp $WORKDIR/tpotce/iso/installer/tpot.conf.dist $WORKDIR/tpot.conf && \
# set the password to random string generated by terraform
sed "s/myCONF_WEB_PW[^ ]*/myCONF_WEB_PW='$WEBPASS'/g" -i $WORKDIR/tpot.conf && \ # modify the default config file with new password

cd $WORKDIR/tpotce
#myQST=y ./install.sh --type=auto --conf="$WORKDIR/tpot.conf" && \
sh install.sh --type=auto --conf="$WORKDIR/tpot.conf" # && \ # install tpot
# systemctl start tpot && \ # start the tpot service
# systemctl enable tpot && \ # enable the tpot service
# rm $WORKDIR/tpot.conf && \ # remove the file containing the password
# telinit 6 # reboot the machine

    EOF

  name = "sample-i"

  network_interface {
    access_config {
      network_tier = "PREMIUM"
    }

    queue_count = 0
    stack_type  = "IPV4_ONLY"
    #subnetwork  = "projects/travel-plans-class-5/regions/us-central1/subnetworks/public-1"
    subnetwork = "projects/${var. project_name}/regions/us-central1/subnetworks/${google_compute_subnetwork.private-subnet.name}"
  }

  scheduling {
    automatic_restart   = false
    on_host_maintenance = "TERMINATE"
    preemptible         = true
    provisioning_model  = "SPOT"
  }

  service_account {
    email  = "597342763827-compute@developer.gserviceaccount.com"
    scopes = ["https://www.googleapis.com/auth/devstorage.read_only", "https://www.googleapis.com/auth/logging.write", "https://www.googleapis.com/auth/monitoring.write", "https://www.googleapis.com/auth/service.management.readonly", "https://www.googleapis.com/auth/servicecontrol", "https://www.googleapis.com/auth/trace.append"]
  }

  shielded_instance_config {
    enable_integrity_monitoring = true
    enable_secure_boot          = false
    enable_vtpm                 = true
  }

  tags = ["http-server", "https-server"]
  zone = "us-central1-a"
}
